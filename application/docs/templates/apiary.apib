FORMAT: 1A
HOST: https://ridemyway-carpool.herokuapp.com

# Ride my way-api
Ride-my-way App is a carpooling application that provides drivers with the ability to create ride offers and passengers to join the ride offers.


### New account [POST /api/v1/auth/signup]
Users register their accounts using this endpoint so that they can access offers or offer their own offers using the platform.

+ Request (application/json)

        
        {
            "firstname": "your firstname",
            "secondname": "your secondname",
            "email": "your email address",
            "password": "your password",
            "phone": "phone number",
            "confirm_password": "confirm your password",
            "driver":"True for drive, False for a normal user"
        }
        
        
+ Response 201 (application/json)

        201
        Content-type:application/json
        [
          {
            "message":"Account created"
          }
        ]
        

### Reset password [PUT /api/v1/auth/reset_password]

User can change his/her account password through this endpoint. Users need to provide
their account details(email or username) and the new password.


+ Request (application/json)

        
        {
            "email": "fill your email here",
            "password": "your new password",
            "confirm_password": "confirm your new password"
        }
        
+ Response 200 (application/json)

        200
        Content-type:application/json
        {
            "message": "password updated"
        }
        
        

### user login [POST /api/v1/auth/login]

User uses this endpoint for login. After successful login, the user is assigned a token.
To login, user must provide email or username and password.


+ Request (application/json)

        [
            {
                "email":"email@gmail.com", "password":"xxxx"
            }
        ]

+ Response 201 (application/json)
    
        [
            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzY290Y2guaW8iLCJleHAiOjEzMDA4MTkzODAsIm5hbWUiOiJDaHJpcyBTZXZpbGxlamEiLCJhZG1pbiI6dHJ1ZX0.03f329983b86f7d9a9f5fef85305880101d5e302afafa20154d094b229f75773",
                "message":"logged in"
            }
        ]


### user profile [GET /api/v1/auth/profile]

Through this endpoint, logged-in users can view their account details

     
+ Response 200 (application/json)

        
        {
            "firstname": "your firstname",
            "secondname": "your secondname",
            "email": "your email address",
            "phone": "phone number",
            "user_type":"passenger/driver"
        }


### Upgrade user account [PUT /api/v1/auth/upgrade?query=upgrade]
User can upgrade his/her account to be a driver using this endpoint

     
+ Response 200 (application/json)

        
        {
            'user-type': 'Driver'
        }
        

## New ride offer [POST /api/v1/users/rides]
Users offer their rides by creating ride offers using this endpoint. The request to create a ride offer must be in the format shown in the request body.

+ Request (application/json)

        [
            {
                "start point": "Witeithye",
                 "destination": "Ngara",
                 "route": "Thika superhighway",
                 "start time": "2018 June 10 6:00AM",
                 "available space": 3
            }
        ]
    
+ Response 200 (application/json)

        {
           "message":"ride offer added successfully."
        }


## Modify data for ride offer [/api/v1/users/rides/{ride_id}]
+ Parameters
    + ride_id(required, integer)


### Delete ride offer [DELETE]
This endpoint can be used by Users to delete their rides.
    
+ Response 200 (application/json)

        {
           "message":"Ride offer deleted successfully"
        }        

### Update details of a ride offer [PUT]
Using this endpoint, users can edit details of a given ride offer.

+ Request (application/json)

        [
            {
                "start point": "Juja",
                "destination": "Ngara Market",
                "route": "Thika superhighway",
                "start time": "June 10 2030 6:00AM",
                "available space": 4
            }
        ]


+ Response 200 (application/json)

        {
            "id": {ride_id},
            "start point": "Juja",
            "destination": "Ngara Market",
            "route": "Thika superhighway",
            "start time": "June 10 2030 6:00AM", 
            "available seats": 4
        }


## Retrieve ride offers [/api/v1/rides]

### All rides [GET ]
 Through this endpoint, users can view all available ride offers in the platform

+ Response 200 (application/json)

        [
            {
               "id":1,
                "start point": "Witeithye",
                "destination": "Ngara",
                "route": "Thika superhighway",
                "start time": "June 10 2018 6:00AM",
                "available space": 10
            },
           {
               "id":2,
                "route": "Thika-Ruaka",
                "start point": "Thika,Goingwa",
                "destination": "Ruaka",
                "route": "Thika superhighway,Northern By-pass",
                "start time": "June 10 2018 6:00AM",
                "available space": 9
            }
        ]

### Retrieve all rides which meet search criteria [GET /api/v1/rides?key=search_key&search_key=search_value]
 Through this endpoint, users can view all available ride offers meeting the given search criteria

+ Response 200 (application/json)

        json data for all rides meeting the given search criteria
    
### Retrieve a single ride offer [GET /api/v1/rides/{ride_id}]
Users retrieve details of a given ride offer through this endpoint.
+ Parameters 
  + ride_id(required, integer)

+ Response 200 (application/json)

        [
            {
                "id":ride_id,
                "start point": "Witeithye",
                "destination": "Ngara",
                "route": "Thika superhighway",
                "start time": "June 10 2018 6:00AM",
                "available space": 10
            }
        ]
    

### Join a particular ride offer [POST /api/v1/rides/{rideId}/requests]
Users are able to request to join a ride offer through this endpoint. They need to
send thier request in the following format.

+ Parameters 
  + rideId(required, integer)
+ Request (application/json)

        [
            {
                "pick-up point": "Juja",
                "drop-off point": "Githurai",
                "seats_booked" : 3
            }
        ]

+ Response 201 (application/json)

        [
            {
               "message":"You request has been send."
            }
        ]
    

### View user request [GET /api/v1/users/rides/{ride_id}/requests]
This endpoint is used by drivers to view all user requests for their ride offers.
+ Parameters 
  + ride_id(required, integer)

+ Response 200 (application/json)

        [
            {
                "drop-off point": "Juja",
                "name of user": "mbuvi",
                "pick up point": "Witeithye",
                "start time": "Mon, 11 Jun 2040 06:00:00 GMT",
                "status": "Pending",
                "user phone": "719800509"
            },
            {
                "drop-off point": "Juja",
                "name of user": "Kamau",
                "pick up point": "Witeithye",
                "start time": "Mon, 11 Jun 2040 06:00:00 GMT",
                "status": "Pending",
                "user phone": "719801509"
            }
        ]
        
### Accept/reject user request [PUT /api/v1/users/rides/requests/{request_id}]
Through this endpoint, driver can accept or reject user's request to join a ride offer.

+ Parameters 
  + request_id(required, integer)

+ Request (application/json)

            {
            "action": "accept"
            }
            
+ Response 200 (application/json)

        [
            {
                "message":"Request accepted"
            }
        ]


+ Request (application/json)

            {
            "action": "reject"
            }
            
+ Response 200 (application/json)

        [
            {
                "message":"Requests rejected"
            }
        ]
        